rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /* --- helpers --- */
    function isSignedIn() { return request.auth != null; }
    function isAdmin() {
      return isSignedIn() && (
        request.auth.token.admin == true ||
        request.auth.token.email == 'samantha.adorno30@gmail.com' ||
        // Check if user email is in the database admin list
        (exists(/databases/$(database)/documents/settings/adminUsers) &&
         request.auth.token.email in get(/databases/$(database)/documents/settings/adminUsers).data.emails)
      );
    }

    /* --- Exercises: public read, admin-only write --- */
    match /exercises/{docId} {
      allow read: if true;
      allow create, update, delete: if isAdmin();
    }

    /* --- Workouts: users can fully manage their own workouts --- */
    match /workouts/{workoutId} {
      // Users can read their own workouts
      allow read: if isSignedIn() && resource.data.userId == request.auth.uid;

      // Users can create workouts for themselves
      allow create: if isSignedIn() && request.resource.data.userId == request.auth.uid;

      // Users can update their own workouts
      allow update: if isSignedIn() && resource.data.userId == request.auth.uid;
      
      // Users can delete their own workouts (except permanent ones like Quick Workout)  
      allow delete: if isSignedIn() && 
        resource.data.userId == request.auth.uid && 
        !('permanent' in resource.data && resource.data.permanent == true);
    }

    /* --- User Management Settings: public read for auth checks, write admin-only --- */
    match /settings/{document} {
      allow read: if true; // Allow anyone to read for auth checks (before they're signed in)
      allow write: if isAdmin();
    }

    /* --- Workout sessions: users can read/write their own record doc --- */
    match /workoutSessions/{uid} {
      allow read, write: if isSignedIn() && uid == request.auth.uid;
    }
  }
}
